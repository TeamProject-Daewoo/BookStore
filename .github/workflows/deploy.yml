name: BookStoreProject CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1. 레포지토리 코드 가져오기 (최신 v4 사용)
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 환경 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Maven으로 .war 파일 빌드
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 4. AWS 자격 증명 설정 (최신 v4 사용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 5. 빌드된 .war 파일을 압축 (.ebextensions 폴더가 있을 경우에만 포함)
      - name: Zip the deployment package
        run: |
          WAR_FILE=$(ls target/*.war | head -n 1)
          if [ -d ".ebextensions" ]; then
            zip -r deploy.zip $WAR_FILE .ebextensions
          else
            zip -r deploy.zip $WAR_FILE
          fi

      # 6. AWS Elastic Beanstalk에 배포 (최신 v21 사용 및 env 블록 추가)
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: BookForest
          environment_name: BookForest-env
          region: ap-northeast-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
        env: # <-- 이 부분이 핵심입니다! 배포 액션에 자격 증명을 직접 주입합니다.
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
